<?xml version="1.0" encoding="UTF-8"?>
<project name="Simulacion_Spotify" default="dist" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
    <description>Build file for Spotify Simulation with Linked Lists</description>
    
    <!-- 1. Propiedades Globales -->
    <property name="src.dir" location="src/main/java"/>
    <property name="test.dir" location="src/test/java"/>
    <property name="build.dir" location="build"/>
    <property name="classes.dir" location="${build.dir}/classes"/>
    <property name="test.classes.dir" location="${build.dir}/test-classes"/>
    <property name="dist.dir" location="dist"/>
    <property name="lib.dir" location="lib"/>
    <property name="reports.dir" location="reports"/>
    <property name="main.class" value="com.spotify.simulation.Main"/>
    <property name="java.version" value="21"/>
    
    <!-- 2. Configuración de Classpath -->
    <path id="classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
        <!-- MySQL Connector si usas base de datos -->
        <fileset file="${lib.dir}/mysql-connector-java-8.0.28.jar"/>
    </path>
    
    <path id="test.classpath">
        <path refid="classpath"/>
        <pathelement location="${classes.dir}"/>
    </path>
    
    <!-- 3. Inicialización -->
    <target name="init">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${test.classes.dir}"/>
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${reports.dir}"/>
        <echo message="Java version: ${java.version}"/>
    </target>
    
    <!-- 4. Compilación del código principal -->
    <target name="compile" depends="init" description="Compile main source code">
        <javac srcdir="${src.dir}" destdir="${classes.dir}" 
               includeantruntime="false" source="${java.version}" target="${java.version}">
            <classpath refid="classpath"/>
            <compilerarg value="-Xlint:unchecked"/>
            <compilerarg value="-Xlint:deprecation"/>
        </javac>
        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}" excludes="**/*.java"/>
        </copy>
    </target>
    
    <!-- 5. Compilación de pruebas -->
    <target name="compile-tests" depends="compile" description="Compile test cases">
        <javac srcdir="${test.dir}" destdir="${test.classes.dir}" 
               includeantruntime="false" source="${java.version}" target="${java.version}">
            <classpath refid="test.classpath"/>
        </javac>
    </target>
    
    <!-- 6. Ejecución de pruebas unitarias -->
    <target name="test" depends="compile-tests" description="Run unit tests">
        <junit printsummary="yes" haltonfailure="no">
            <classpath>
                <path refid="test.classpath"/>
                <pathelement location="${test.classes.dir}"/>
            </classpath>
            <formatter type="xml"/>
            <batchtest todir="${reports.dir}">
                <fileset dir="${test.dir}" includes="**/*Test.java"/>
            </batchtest>
        </junit>
        <junitreport todir="${reports.dir}">
            <fileset dir="${reports.dir}" includes="TEST-*.xml"/>
            <report todir="${reports.dir}"/>
        </junitreport>
    </target>
    
    <!-- 7. Creación del JAR ejecutable -->
    <target name="dist" depends="compile,test" description="Generate the distribution">
        <jar destfile="${dist.dir}/spotify-simulation.jar" basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
                <attribute name="Class-Path" value="."/>
            </manifest>
            <fileset dir="${src.dir}" includes="**/*.properties,**/*.xml"/>
        </jar>
        <copy todir="${dist.dir}/lib">
            <fileset dir="${lib.dir}" includes="**/*.jar"/>
        </copy>
    </target>
    
    <!-- 8. Ejecución de la aplicación -->
    <target name="run" depends="dist" description="Run the application">
        <java jar="${dist.dir}/spotify-simulation.jar" fork="true">
            <classpath>
                <path refid="classpath"/>
                <pathelement location="${dist.dir}/spotify-simulation.jar"/>
            </classpath>
        </java>
    </target>
    
    <!-- 9. Generación de documentación JavaDoc -->
    <target name="javadoc" description="Generate documentation">
        <mkdir dir="${dist.dir}/docs/api"/>
        <javadoc sourcepath="${src.dir}" destdir="${dist.dir}/docs/api" 
                 classpathref="classpath" version="true" use="true" windowtitle="Spotify Simulation API">
            <doctitle><![CDATA[<h1>Spotify Simulation</h1>]]></doctitle>
            <fileset dir="${src.dir}" includes="**/*.java"/>
        </javadoc>
    </target>
    
    <!-- 10. Limpieza -->
    <target name="clean" description="Clean up">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
        <delete dir="${reports.dir}"/>
    </target>
    
    <!-- 11. Target completo para desarrollo -->
    <target name="all" depends="clean,dist,javadoc" description="Clean build and generate docs"/>
    
    <!-- 12. Integración con NetBeans (opcional) -->
    <import file="nbproject/build-impl.xml" optional="true"/>
</project>